// MINIFIED VERSION OF THE FILE OF THE SAME NAME IN THE `src` FOLDER
// MINIFIED WITH https://www.toptal.com/developers/javascript-minifier 

export class AudioNode{constructor(t,i,s){this.audioCtx=i,this.elements=[],this.elements.push(s),this.playing=!1,this.volume=.25,this.loaded=0,this.src=t,this.data=new ArrayBuffer,this.source,this.noise,window.addEventListener("beforeunload",()=>this.shutdown())}async load(){for(var t of(this.loaded=1,this.elements))t.style.backgroundColor="#8800cc";let i=await fetch(this.src),s=await i.arrayBuffer();this.loaded=2,this.data=await this.audioCtx.decodeAudioData(s),this.source=await this.audioCtx.createBufferSource(),this.source.buffer=this.data,this.source.loop=!0,this.loaded=3,this.noise=await this.audioCtx.createGain(),this.noise.gain.setValueAtTime(this.volume,this.audioCtx.currentTime),await this.source.connect(this.noise),await this.noise.connect(this.audioCtx.destination),this.loaded=4,await this.source.start(),await this.noise.disconnect(),this.loaded=5,console.debug(`${this.src} - Finished loading data for AudioNode`)}async play(){if(0==this.loaded&&await this.load(),5==this.loaded){for(var t of this.elements)t.style.backgroundColor="#999999";await this.noise.connect(this.audioCtx.destination),this.playing=!0,console.debug(`${this.src} - Started Playback of AudioNode`)}}async stop(){if(0==this.loaded&&await this.load(),5==this.loaded){for(var t of this.elements)t.style.backgroundColor="#555555";this.noise.disconnect(),this.playing=!1,console.debug(`${this.src} - Halted Playback of AudioNode`)}}async toggle(){!1==this.playing?await this.play():await this.stop(),window.URIsaver.save()}async adjustVolume(t,i){if(this.volume=t,this.noise.gain.setValueAtTime(this.volume,this.audioCtx.currentTime),i)for(var s of this.elements)s.querySelectorAll(".SLIDER")[0].value=i}async shutdown(){if(this.loaded>0){try{this.source.stop()}catch(t){console.error(t)}try{this.noise.disconnect()}catch(i){console.error(i)}try{this.source.disconnect()}catch(s){console.error(s)}console.debug(`${this.src} - Shutdown AudioNode`)}}async addPointer(t){this.elements.push(t)}}